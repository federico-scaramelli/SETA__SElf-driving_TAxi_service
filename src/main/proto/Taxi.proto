syntax = "proto3";
package project.taxi.grpc;

message Ack
{
    bool ack        = 1;
}

message Null {}

message StartingTaxiInfo
{
    int32 id        = 1;
    string address  = 2;
    int32 port      = 3;
    Position pos    = 4;
    double battery  = 5;
}

message Position
{
    int32 x         = 1;
    int32 y         = 2;
}

message QuitNotification
{
    int32 taxiId        = 1;
}

message CompeteRequestData
{
    int32 rideId        = 1;
    int32 rideDistrict  = 2;
    int32 taxiId        = 3;
    double distance     = 4;
    double battery      = 5;
}

message RideRequest
{
    int32 rideId            = 1;
    Position startingPos    = 2;
}

message RideId
{
    int32 rideId        = 1;
}

// Works as an ACK for the competition request communicating in the meanwhile the interest about the ride
message InterestedToCompetition
{
    bool interested = 1;
}

message ChargingRequest
{
    int32 taxiId    = 1;
    int32 taxiPort  = 2;
    int32 district  = 3;
    int32 timestamp = 4;
}

message ChargingReply
{
    int32 taxiId    = 1;
}

service Taxi
{
    rpc notifyJoin (StartingTaxiInfo) returns (Ack);
    rpc notifyQuit (QuitNotification) returns (Null);
    rpc competeForRide (CompeteRequestData) returns (InterestedToCompetition);
    rpc confirmRideTaken (RideId) returns (Ack);
    rpc requestCharging (ChargingRequest) returns (Ack);
    rpc replyCharging (ChargingReply) returns (Null);
}